(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{182:function(e,t,s){"use strict";s.r(t);var a=s(0),r=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"starting-the-websocket-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#starting-the-websocket-server","aria-hidden":"true"}},[e._v("#")]),e._v(" Starting the WebSocket server")]),e._v(" "),s("p",[e._v("Once you have configured your WebSocket apps and Pusher settings, you can start the Laravel WebSocket server by issuing the artisan command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("php artisan websockets:serve\n")])])]),s("h2",{attrs:{id:"using-a-different-port"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-a-different-port","aria-hidden":"true"}},[e._v("#")]),e._v(" Using a different port")]),e._v(" "),s("p",[e._v("The default port of the Laravel WebSocket server is "),s("code",[e._v("6001")]),e._v(". You may pass a different port to the command using the "),s("code",[e._v("--port")]),e._v(" option.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("php artisan websockets:serve --port"),s("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("3030\n")])])]),s("p",[e._v("This will start listening on port "),s("code",[e._v("3030")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"restricting-the-listening-host"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restricting-the-listening-host","aria-hidden":"true"}},[e._v("#")]),e._v(" Restricting the listening host")]),e._v(" "),s("p",[e._v("By default, the Laravel WebSocket server will listen on "),s("code",[e._v("0.0.0.0")]),e._v(" and will allow incoming connections from all networks. If you want to restrict this, you can start the server with a "),s("code",[e._v("--host")]),e._v(" option, followed by an IP.")]),e._v(" "),s("p",[e._v("For example, by using "),s("code",[e._v("127.0.0.1")]),e._v(", you will only allow WebSocket connections from localhost.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("php artisan websockets:serve --host"),s("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("120.0.0.1\n")])])]),s("h2",{attrs:{id:"keeping-the-socket-server-running-with-supervisord"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keeping-the-socket-server-running-with-supervisord","aria-hidden":"true"}},[e._v("#")]),e._v(" Keeping the socket server running with supervisord")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("websocket:start")]),e._v(" daemon needs to always be running in order to accept connections. This is a prime use case for "),s("code",[e._v("supervisor")]),e._v(", a task runner on Linux.")]),e._v(" "),s("p",[e._v("First, make sure "),s("code",[e._v("supervisor")]),e._v(" is installed.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[e._v("# On Debian / Ubuntu")]),e._v("\napt "),s("span",{attrs:{class:"token function"}},[e._v("install")]),e._v(" supervisor\n\n"),s("span",{attrs:{class:"token comment"}},[e._v("# On Red Hat / CentOS")]),e._v("\nyum "),s("span",{attrs:{class:"token function"}},[e._v("install")]),e._v(" supervisor\nsystemctl "),s("span",{attrs:{class:"token function"}},[e._v("enable")]),e._v(" supervisor\n")])])]),s("p",[e._v("Once installed, add a new process that "),s("code",[e._v("supervisor")]),e._v(" needs to keep running. You place your configurations in the "),s("code",[e._v("/etc/supervisor/conf.d")]),e._v(" (Debian/Ubuntu) or "),s("code",[e._v("/etc/supervisord.d")]),e._v(" (Red Hat/CentOS) directory.")]),e._v(" "),s("p",[e._v("Within that directory, create a new file called "),s("code",[e._v("websockets.conf")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[e._v("[")]),e._v("program:websockets"),s("span",{attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\ncommand"),s("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("/usr/bin/php /home/laravel-echo/laravel-websockets/artisan websocket:start\nnumprocs"),s("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("1\nautostart"),s("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("true\nautorestart"),s("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("true\nuser"),s("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v("laravel-echo\n")])])]),s("p",[e._v("Once created, instruct "),s("code",[e._v("supervisor")]),e._v(" to reload its configuration files (without impacting the already running "),s("code",[e._v("supervisor")]),e._v(" jobs).")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("supervisorctl update\nsupervisorctl start websockets\n")])])]),s("p",[e._v("Your echo server should now be running (you can verify this with "),s("code",[e._v("supervisorctl status")]),e._v("). If it were to crash, "),s("code",[e._v("supervisor")]),e._v(" will automatically restart it.")]),e._v(" "),s("p",[e._v("Please note that, by default, "),s("code",[e._v("supervisor")]),e._v(" will force a maximum number of open files onto all the processes that it manages. This is configured by the "),s("code",[e._v("minfds")]),e._v(" parameter in "),s("code",[e._v("supervisord.conf")]),e._v(".")]),e._v(" "),s("p",[e._v("If you want to increase the maximum number of open files, you may do so in "),s("code",[e._v("/etc/supervisor/supervisord.conf")]),e._v(" (Debian/Ubuntu) or "),s("code",[e._v("/etc/supervisord.conf")]),e._v(" (Red Hat/CentOS):")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("[supervisord]\nminfds=10240; (min. avail startup file descriptors;default 1024)\n")])])]),s("p",[e._v("After changing this setting, you'll need to restart the supervisor process (which in turn will restart all your processes that it manages).")])])}],!1,null,null,null);r.options.__file="starting.md";t.default=r.exports}}]);